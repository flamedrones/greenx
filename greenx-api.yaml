openapi: 3.0.0
info:
  version: 0.0.2
  title: GreenX
servers:
  - url: 'http://localhost:3000'
paths:
  /drone/order:
    post:
      summary: Create a Drone Order
      operationId: post-droneorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        description: 'Specify Drone Package Position and Dimensions, and the delivery point'
      description: It Creates a Drone Order
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    parameters: []
  /drone/reward:
    post:
      summary: Get Reward
      operationId: post-drone-reward
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    format: email
                  tokenAmount:
                    type: number
                  orderId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                orderId:
                  type: string
      description: Send Email to Backend to Make
  /train/tickets:
    get:
      summary: Get Train Tickets
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
      operationId: get-train
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: startDest
          description: The Start Destination
          required: true
        - schema:
            type: string
          in: query
          name: stopDest
          description: The Stop Destination
          required: true
    parameters: []
  /train/purchase:
    post:
      summary: Purchase a Train Ticket
      operationId: post-train-purchase
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  tokenAmount:
                    type: number
                  ticketId:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                ticketId:
                  type: string
                  format: uuid
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Order:
      title: Drone Order
      type: object
      description: The Firestore Order Object for a Drone Order
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          enum:
            - pending
            - in_delivery
            - complete
            - failed
          readOnly: true
        delivery_time:
          type: string
          format: date-time
          readOnly: true
        dimension:
          type: object
          properties:
            height:
              type: number
              format: float
              description: in cm
              minimum: 1
              maximum: 30
            width:
              type: number
              format: float
              description: in cm
              minimum: 1
              maximum: 30
            weight:
              type: number
              format: float
              minimum: 0.001
              maximum: 0.5
              description: in kg
            length:
              type: number
              format: float
              minimum: 1
              maximum: 30
              description: in cm
        pos:
          type: string
          description: |-
            current position of drone in lattitude and logitude;  

            if creating order, the order pickup location;

            see geopoint of firestore
        pickup_time:
          type: string
          format: date-time
          readOnly: true
        delivery_pos:
          type: string
          description: where the drone should arrive; firestore geopoint
    Ticket:
      title: Train Ticket
      type: object
      description: Train Ticket Object Model for the TrainX App
      properties:
        id:
          type: string
        startDestination:
          type: string
        endDestination:
          type: string
        platform:
          type: string
        timeLeave:
          type: string
          format: date-time
        timeArrive:
          type: string
          format: date-time
        distance:
          type: number
          format: double
        price:
          type: number
          format: double
